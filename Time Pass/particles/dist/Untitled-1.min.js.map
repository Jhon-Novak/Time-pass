{"version":3,"sources":["Untitled-1.js"],"names":["canvas","mouse","stats","list","ctx","tog","man","dx","dy","mx","my","d","t","f","b","n","a","h","s","i","c","NUM_PARTICLES","ROWS","COLS","THICKNESS","Math","pow","SPACING","MARGIN","COLOR","vx","init","container","document","getElementById","createElement","getContext","width","height","marginLeft","round","style","Object","create","particle","p","ox","oy","floor","bounds","getBoundingClientRect","e","clientY","clientX","left","top","Stats","appendChild","domElement","step","Date","begin","cos","w","sin","tan","atan2","x","y","createImageData","vy","DRAG","EASE","requestAnimationFrame","data","putImageData","end","r"],"mappings":"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","file":"Untitled-1.min.js","sourcesContent":["var NUM_PARTICLES = ((ROWS = 100) * (COLS = 300)),\r\n    THICKNESS = Math.pow(80, 2),\r\n    SPACING = 3,\r\n    MARGIN = 100,\r\n    COLOR = 220,\r\n    DRAG = 0.95,\r\n    EASE = 0.25,\r\n\r\n    /*\r\n\r\n    used for sine approximation, but Math.sin in Chrome is still fast enough :)http://jsperf.com/math-sin-vs-sine-approximation\r\n\r\n    B = 4 / Math.PI,\r\n    C = -4 / Math.pow( Math.PI, 2 ),\r\n    P = 0.225,\r\n\r\n    */\r\n\r\n    container,\r\n    particle,\r\n    canvas,\r\n    mouse,\r\n    stats,\r\n    list,\r\n    ctx,\r\n    tog,\r\n    man,\r\n    dx, dy,\r\n    mx, my,\r\n    d, t, f,\r\n    a, b,\r\n    i, n,\r\n    w, h,\r\n    p, s,\r\n    r, c;\r\n\r\nparticle = {\r\n    vx: 0,\r\n    vy: 0,\r\n    x: 0,\r\n    y: 0\r\n};\r\n\r\nfunction init() {\r\n\r\n    container = document.getElementById('container');\r\n    canvas = document.createElement('canvas');\r\n\r\n    ctx = canvas.getContext('2d');\r\n    man = false;\r\n    tog = true;\r\n\r\n    list = [];\r\n\r\n    w = canvas.width = COLS * SPACING + MARGIN * 2;\r\n    h = canvas.height = ROWS * SPACING + MARGIN * 2;\r\n\r\n    container.style.marginLeft = Math.round(w * -0.5) + 'px';\r\n    container.style.marginTop = Math.round(h * -0.5) + 'px';\r\n\r\n    for (i = 0; i < NUM_PARTICLES; i++) {\r\n\r\n        p = Object.create(particle);\r\n        p.x = p.ox = MARGIN + SPACING * (i % COLS);\r\n        p.y = p.oy = MARGIN + SPACING * Math.floor(i / COLS);\r\n\r\n        list[i] = p;\r\n    }\r\n\r\n    container.addEventListener('mousemove', function(e) {\r\n\r\n        bounds = container.getBoundingClientRect();\r\n        mx = e.clientX - bounds.left;\r\n        my = e.clientY - bounds.top;\r\n        man = true;\r\n\r\n    });\r\n\r\n    if (typeof Stats === 'function') {\r\n        document.body.appendChild((stats = new Stats()).domElement);\r\n    }\r\n\r\n    container.appendChild(canvas);\r\n}\r\n\r\nfunction step() {\r\n\r\n    if (stats) stats.begin();\r\n\r\n    if (tog = !tog) {\r\n\r\n        if (!man) {\r\n\r\n            t = +new Date() * 0.001;\r\n            mx = w * 0.5 + (Math.cos(t * 2.1) * Math.cos(t * 0.9) * w * 0.45);\r\n            my = h * 0.5 + (Math.sin(t * 3.2) * Math.tan(Math.sin(t * 0.8)) * h * 0.45);\r\n        }\r\n\r\n        for (i = 0; i < NUM_PARTICLES; i++) {\r\n\r\n            p = list[i];\r\n\r\n            d = (dx = mx - p.x) * dx + (dy = my - p.y) * dy;\r\n            f = -THICKNESS / d;\r\n\r\n            if (d < THICKNESS) {\r\n                t = Math.atan2(dy, dx);\r\n                p.vx += f * Math.cos(t);\r\n                p.vy += f * Math.sin(t);\r\n            }\r\n\r\n            p.x += (p.vx *= DRAG) + (p.ox - p.x) * EASE;\r\n            p.y += (p.vy *= DRAG) + (p.oy - p.y) * EASE;\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        b = (a = ctx.createImageData(w, h)).data;\r\n\r\n        for (i = 0; i < NUM_PARTICLES; i++) {\r\n\r\n            p = list[i];\r\n            b[n = (~~p.x + (~~p.y * w)) * 4] = b[n + 1] = b[n + 2] = COLOR, b[n + 3] = 255;\r\n        }\r\n\r\n        ctx.putImageData(a, 0, 0);\r\n    }\r\n\r\n    if (stats) stats.end();\r\n\r\n    requestAnimationFrame(step);\r\n}\r\n\r\ninit();\r\nstep();"]}